{"version":3,"sources":["List.tsx"],"names":["dayjs","React","useCallback","useContext","useEffect","useImperativeHandle","useMemo","useRef","useState","Platform","ScrollView","useWindowDimensions","View","Animated","FadeInDown","FadeOutUp","useSafeAreaInsets","DataProvider","LayoutProvider","RecyclerListView","ChatBubble","PropsContext","FAB","LoadEarlier","RenderDate","TypingStatus","useHaptic","usePrevious","SwipeableBubble","HapticType","LayoutType","ChatBubbleEmitter","hapticEngine","wait","ScrollViewWithHeader","forwardRef","ref","children","props","propsContext","loadEarlierProps","show","List","recyclerlistviewRef","windowDimensions","safeArea","trigger","fabRef","typingStatusRef","listHeight","height","bottom","top","rowRenderer","rowRendererProp","data","dataProvider","r1","r2","id","messages","setMessages","previousMessages","cloneWithRows","addListener","messageId","index","getAllData","findIndex","m","current","scrollToIndex","removeAllListeners","appendMessage","message","firstIndex","Array","isArray","me","enableHapticFeedback","OS","Heavy","scrollToEnd","animated","setIsTyping","typing","removeMessage","filter","then","layoutProvider","currentMessage","prevMessage","text","length","ExtremeLong","Long3x","Long2x","Long","media","Media2x","Media","repliedTo","Replied","isFirstMessage","createdAt","date","Dated","Normal","type","dim","width","renderBubble","withDate","renderDateProps","onReply","onScroll","e","offsetX","offsetY","nativeEvent","contentOffset","y","hide","scrollToBottom","minWidth","minHeight","maxHeight","showScrollToBottomButton","scrollToBottomProps","replyingTo","containerStyle","keyboardShouldPersistTaps","onEndReached","onEndReachedThreshold"],"mappings":"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","sourcesContent":["import dayjs from 'dayjs';\nimport type { ForwardedRef, Ref } from 'react';\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Platform, ScrollView, useWindowDimensions, View } from 'react-native';\nimport Animated, { FadeInDown, FadeOutUp } from 'react-native-reanimated';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  DataProvider,\n  LayoutProvider,\n  RecyclerListView,\n} from 'recyclerlistview';\nimport type { ScrollEvent } from 'recyclerlistview/dist/reactnative/core/scrollcomponent/BaseScrollView';\nimport { ChatBubble } from './ChatBubble';\nimport { PropsContext } from './Chatty';\nimport { FAB, IFabRef } from './components/FAB';\nimport { LoadEarlier } from './components/LoadEarlier';\nimport { RenderDate } from './components/RenderDate';\nimport { TypingStatus } from './components/TypingStatus';\nimport { useHaptic } from './hooks/useHaptic';\nimport { usePrevious } from './hooks/usePrevious';\nimport { SwipeableBubble } from './SwipeableBubble';\nimport {\n  HapticType,\n  IListProps,\n  IMessage,\n  ITypingStatusRef,\n  LayoutType,\n  ListRef,\n} from './types/Chatty.types';\nimport { ChatBubbleEmitter } from './utils/eventEmitter';\nimport { hapticEngine } from './utils/hapticEngine';\nimport { wait } from './utils/helpers';\n\nconst ScrollViewWithHeader = React.forwardRef(\n  ({ children, ...props }, ref: Ref<ScrollView>) => {\n    const propsContext = useContext(PropsContext);\n\n    return (\n      <ScrollView ref={ref} {...props}>\n        {propsContext?.loadEarlierProps &&\n          propsContext.loadEarlierProps.show && (\n            <LoadEarlier {...propsContext.loadEarlierProps} />\n          )}\n        {children}\n      </ScrollView>\n    );\n  }\n);\n\nexport const List = React.forwardRef(\n  (props: IListProps, ref: ForwardedRef<ListRef>) => {\n    const propsContext = useContext(PropsContext);\n    const recyclerlistviewRef = useRef<RecyclerListView<any, any>>();\n    const windowDimensions = useWindowDimensions();\n    const safeArea = useSafeAreaInsets();\n    const { trigger } = useHaptic();\n    const fabRef = useRef<IFabRef>(null);\n    const typingStatusRef = useRef<ITypingStatusRef>(null);\n    const listHeight = useMemo(\n      () => windowDimensions.height - 150 - safeArea.bottom - safeArea.top,\n      [windowDimensions, safeArea]\n    );\n    const { rowRenderer: rowRendererProp, data } = props;\n\n    const dataProvider = useMemo<DataProvider>(() => {\n      return new DataProvider((r1: IMessage, r2: IMessage) => {\n        if (r1.id !== r2.id) {\n          return true;\n        }\n\n        return false;\n      });\n    }, []);\n\n    const [messages, setMessages] = useState<DataProvider>(dataProvider);\n    const previousMessages = usePrevious<DataProvider>(messages);\n\n    /* This is a React Hook that is used to update the messages list when new messages are added. */\n    useEffect(() => {\n      setMessages(dataProvider.cloneWithRows(data));\n    }, [data, dataProvider]);\n\n    /* This code is listening to the event of a reply bubble being pressed. When it is pressed, it scrolls\nto the replied message. */\n    useEffect(() => {\n      // When reply is pressed, scroll to replied message\n      ChatBubbleEmitter.addListener('replyBubblePressed', (messageId) => {\n        const index = messages\n          .getAllData()\n          .findIndex((m) => m.id === messageId);\n\n        if (index !== -1) {\n          recyclerlistviewRef.current?.scrollToIndex(index, true);\n        }\n      });\n\n      return () => {\n        ChatBubbleEmitter.removeAllListeners();\n      };\n    }, [messages]);\n\n    /* Using the useImperativeHandle hook to expose a function to the parent component that will allow\n    it to manipulate the messages list. */\n    useImperativeHandle(\n      ref,\n      () => ({\n        appendMessage: (\n          message: IMessage | IMessage[],\n          firstIndex?: boolean\n        ) => {\n          if (firstIndex) {\n            if (Array.isArray(message)) {\n              setMessages(\n                dataProvider.cloneWithRows([\n                  ...message,\n                  ...messages.getAllData(),\n                ])\n              );\n            } else {\n              setMessages(\n                dataProvider.cloneWithRows([message, ...messages.getAllData()])\n              );\n            }\n          } else {\n            if (Array.isArray(message)) {\n              setMessages(\n                dataProvider.cloneWithRows([\n                  ...messages.getAllData(),\n                  ...message,\n                ])\n              );\n            } else {\n              setMessages(\n                dataProvider.cloneWithRows([...messages.getAllData(), message])\n              );\n            }\n          }\n\n          if (!Array.isArray(message)) {\n            if (!message.me && propsContext?.enableHapticFeedback) {\n              if (Platform.OS !== 'web' && hapticEngine)\n                trigger(HapticType.Heavy);\n            }\n          }\n        },\n        /* This is a function that is used to scroll to the bottom of the list. */\n        scrollToEnd: (animated?: boolean) => {\n          recyclerlistviewRef.current?.scrollToEnd(animated);\n        },\n        /* Setting the typing status of the user. */\n        setIsTyping: (typing?: boolean) => {\n          typingStatusRef.current?.setIsTyping(typing ?? false);\n          recyclerlistviewRef.current?.scrollToEnd(true);\n        },\n        /* Removing a message from the list of messages. */\n        removeMessage: (id: number) => {\n          setMessages(\n            dataProvider.cloneWithRows(\n              messages.getAllData().filter((message) => message.id !== id)\n            )\n          );\n        },\n      }),\n      [dataProvider, messages, propsContext.enableHapticFeedback, trigger]\n    );\n\n    /* This code is checking if the first message in the previous messages is the same as the first message\nin the current messages. If it is, then it will not scroll to the bottom. */\n    useEffect(() => {\n      if (\n        previousMessages &&\n        previousMessages.getAllData()![0]?.id === messages.getAllData()![0]?.id\n      ) {\n        wait(100).then(() => {\n          recyclerlistviewRef.current?.scrollToEnd(true);\n        });\n      }\n    }, [ref, messages, previousMessages]);\n\n    const layoutProvider = useCallback(() => {\n      return new LayoutProvider(\n        (index) => {\n          const currentMessage: IMessage = messages.getAllData()[index];\n          const prevMessage: IMessage = messages.getAllData()[index - 1];\n\n          if (currentMessage.text.length >= 600) {\n            return LayoutType.ExtremeLong;\n          }\n\n          if (currentMessage.text.length >= 400) {\n            return LayoutType.Long3x;\n          }\n\n          if (currentMessage.text.length >= 200) {\n            return LayoutType.Long2x;\n          }\n\n          if (currentMessage.text.length >= 100) {\n            return LayoutType.Long;\n          }\n\n          if (currentMessage?.media) {\n            if (currentMessage.media.length > 2) {\n              return LayoutType.Media2x;\n            }\n\n            return LayoutType.Media;\n          }\n\n          if (currentMessage.repliedTo) {\n            return LayoutType.Replied;\n          }\n\n          const isFirstMessage = index === 0;\n\n          if (\n            (!isFirstMessage &&\n              dayjs(currentMessage.createdAt).date() !==\n                dayjs(prevMessage.createdAt).date()) ||\n            isFirstMessage\n          ) {\n            return LayoutType.Dated;\n          }\n\n          return LayoutType.Normal;\n        },\n        (type, dim) => {\n          dim.width = windowDimensions.width;\n\n          switch (type) {\n            case LayoutType.Normal:\n              dim.height = 85;\n              break;\n            case LayoutType.Replied:\n              dim.height = 190;\n              break;\n            case LayoutType.Dated:\n              dim.height = 110;\n              break;\n            case LayoutType.Long:\n              dim.height = 130;\n              break;\n            case LayoutType.Long2x:\n              dim.height = 170;\n              break;\n            case LayoutType.Long3x:\n              dim.height = 350;\n              break;\n            case LayoutType.ExtremeLong:\n              dim.height = 550;\n              break;\n            case LayoutType.Media:\n              dim.height = 180;\n              break;\n            case LayoutType.Media2x:\n              dim.height = 300;\n              break;\n\n            default:\n              dim.height = 85;\n              break;\n          }\n        }\n      );\n    }, [messages, windowDimensions.width]);\n\n    const renderBubble = useCallback(\n      (data: IMessage, withDate?: boolean) => {\n        if (rowRendererProp) {\n          return (\n            <View>\n              {withDate && (\n                <RenderDate\n                  date={data.createdAt}\n                  {...propsContext.renderDateProps}\n                />\n              )}\n\n              <Animated.View entering={FadeInDown} exiting={FadeOutUp}>\n                <SwipeableBubble message={data} onReply={propsContext.onReply}>\n                  {rowRendererProp(data)}\n                </SwipeableBubble>\n              </Animated.View>\n            </View>\n          );\n        }\n\n        return (\n          <View style={{ width: '100%' }}>\n            {withDate && (\n              <RenderDate\n                date={data.createdAt}\n                {...propsContext.renderDateProps}\n              />\n            )}\n            <Animated.View entering={FadeInDown} exiting={FadeOutUp}>\n              {propsContext.onReply ? (\n                <>\n                  <SwipeableBubble\n                    message={data}\n                    onReply={propsContext.onReply}\n                  />\n                </>\n              ) : (\n                <ChatBubble message={data} />\n              )}\n            </Animated.View>\n          </View>\n        );\n      },\n      [propsContext.onReply, propsContext.renderDateProps, rowRendererProp]\n    );\n\n    const rowRenderer = useCallback(\n      (type, data: IMessage) => {\n        if (type === LayoutType.Dated) {\n          return renderBubble(data, true);\n        }\n\n        return renderBubble(data);\n      },\n      [renderBubble]\n    );\n\n    const onScroll = useCallback(\n      (e: ScrollEvent, offsetX: number, offsetY: number) => {\n        if (e.nativeEvent.contentOffset.y <= 0) {\n          fabRef.current?.show();\n        } else {\n          fabRef.current?.hide();\n        }\n\n        if (props.onScroll) {\n          props.onScroll(e, offsetX, offsetY);\n        }\n      },\n      [props]\n    );\n\n    const scrollToBottom = useCallback(() => {\n      recyclerlistviewRef.current?.scrollToEnd(true);\n    }, []);\n\n    return (\n      <View style={{ minWidth: 1, minHeight: 1, maxHeight: listHeight }}>\n        {propsContext.showScrollToBottomButton && (\n          <FAB\n            ref={fabRef}\n            onPress={scrollToBottom}\n            {...propsContext.scrollToBottomProps}\n          />\n        )}\n\n        <RecyclerListView\n          layoutProvider={layoutProvider()}\n          externalScrollView={ScrollViewWithHeader}\n          dataProvider={messages}\n          style={[\n            {\n              height: propsContext.replyingTo ? '90%' : '100%',\n            },\n            props.containerStyle,\n          ]}\n          // @ts-ignore\n          ref={recyclerlistviewRef}\n          scrollViewProps={{\n            keyboardShouldPersistTaps: 'never',\n          }}\n          onScroll={onScroll}\n          optimizeForInsertDeleteAnimations\n          forceNonDeterministicRendering\n          canChangeSize={true}\n          rowRenderer={rowRenderer}\n          renderFooter={() => <TypingStatus ref={typingStatusRef} />}\n          onEndReached={props?.onEndReached}\n          onEndReachedThreshold={props?.onEndReachedThreshold}\n        />\n      </View>\n    );\n  }\n);\n"]}