{"version":3,"sources":["Chatty.tsx"],"names":["dayjs","React","useCallback","useEffect","useRef","ActivityIndicator","Keyboard","KeyboardAvoidingView","Platform","StyleSheet","View","SafeAreaView","Footer","Header","List","PropsContext","createContext","Chatty","forwardRef","props","ref","listRef","messages","listener","addListener","current","scrollToEnd","console","warn","remove","setDateLocale","locale","renderLoading","styles","loadingContainer","renderHeader","headerProps","select","android","ios","length","renderBubble","undefined","listProps","renderFooter","footerProps","replyingTo","create","height","justifyContent","alignContent","alignItems"],"mappings":"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","sourcesContent":["import dayjs from 'dayjs';\nimport type { ForwardedRef } from 'react';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport {\n  ActivityIndicator,\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\nimport { List } from './List';\nimport type { IChatty, ListRef } from './types/Chatty.types';\n\nexport const PropsContext = React.createContext<IChatty>({} as IChatty);\n\nexport const Chatty = React.forwardRef(\n  (props: IChatty, ref: ForwardedRef<ListRef>) => {\n    const listRef = useRef<ListRef>();\n    const { messages } = props;\n\n    /* This is a way to scroll to the end of the list when the keyboard is shown. */\n    useEffect(() => {\n      const listener = Keyboard.addListener('keyboardDidShow', () => {\n        if (listRef.current) {\n          listRef.current?.scrollToEnd(true);\n        } else if (ref) {\n          //@ts-ignore\n          ref.current?.scrollToEnd(true);\n        } else {\n          console.warn('No ref found');\n        }\n      });\n\n      return () => {\n        listener.remove();\n      };\n    }, [ref]);\n\n    useEffect(() => {\n      if (props?.setDateLocale) {\n        dayjs.locale(props.setDateLocale);\n      }\n    }, [props.setDateLocale]);\n\n    const renderLoading = useCallback(() => {\n      return (\n        <View style={[styles.loadingContainer]}>\n          <ActivityIndicator />\n        </View>\n      );\n    }, []);\n\n    return (\n      <SafeAreaView>\n        <PropsContext.Provider value={props}>\n          {props?.renderHeader ? (\n            props.renderHeader(props.headerProps)\n          ) : (\n            <Header {...props.headerProps} />\n          )}\n          <KeyboardAvoidingView\n            behavior={Platform.select({\n              android: 'position',\n              ios: 'position',\n            })}\n            keyboardVerticalOffset={Platform.select({\n              android: 20,\n            })}\n          >\n            {props.messages.length < 1 ? (\n              renderLoading()\n            ) : (\n              <>\n                <List\n                  data={messages}\n                  //@ts-ignore\n                  ref={ref ?? listRef}\n                  rowRenderer={\n                    props?.renderBubble ? props.renderBubble : undefined\n                  }\n                  {...props.listProps}\n                />\n                {props?.renderFooter ? (\n                  props.renderFooter(props.footerProps)\n                ) : (\n                  <Footer\n                    {...props.footerProps}\n                    replyingTo={props.replyingTo}\n                  />\n                )}\n              </>\n            )}\n          </KeyboardAvoidingView>\n        </PropsContext.Provider>\n      </SafeAreaView>\n    );\n  }\n);\n\nexport const styles = StyleSheet.create({\n  loadingContainer: {\n    height: '90%',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n  },\n});\n"]}