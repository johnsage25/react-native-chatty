{"version":3,"sources":["ContextMenuWrapper.tsx"],"names":["React","useContext","useCallback","ActionSheetIOS","Platform","TouchableOpacity","PropsContext","contextMenuView","ChatEmitter","ContextMenuWrapper","props","propsContext","onPress","index","emit","message","onLongPress","OS","showActionSheetWithOptions","options","bubbleProps","actions","map","_","title","cancelButtonLabel","cancelButtonIndex","length","destructiveButtonIndex","findIndex","destructive","children","Version","e","nativeEvent"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { useCallback } from 'react';\nimport { ActionSheetIOS, Platform, TouchableOpacity } from 'react-native';\nimport type { IMessage } from '../types/Chatty.types';\nimport { PropsContext } from '../Chatty';\nimport { contextMenuView } from '../utils/contextMenu';\nimport { ChatEmitter } from '../utils/eventEmitter';\n\ninterface IProps {\n  message: IMessage;\n  children: JSX.Element;\n}\n\nfunction ContextMenuWrapper(props: IProps) {\n  const propsContext = useContext(PropsContext);\n\n  const onPress = useCallback(\n    (index) => {\n      ChatEmitter.emit('actionPressed', index, props.message);\n    },\n    [props.message]\n  );\n\n  const onLongPress = useCallback(() => {\n    if (Platform.OS === 'ios') {\n      ActionSheetIOS.showActionSheetWithOptions(\n        {\n          options: [\n            ...(propsContext.bubbleProps?.actions?.options.map(\n              (_) => _.title\n            ) as string[]),\n            propsContext.bubbleProps?.actions?.cancelButtonLabel ?? 'Close',\n          ],\n          cancelButtonIndex: propsContext.bubbleProps?.actions?.options.length,\n          destructiveButtonIndex:\n            propsContext.bubbleProps?.actions?.options.findIndex(\n              (_) => _.destructive\n            ) || -1,\n        },\n        onPress\n      );\n    }\n  }, [\n    onPress,\n    propsContext.bubbleProps?.actions?.cancelButtonLabel,\n    propsContext.bubbleProps?.actions?.options,\n  ]);\n\n  // If actions are not defined, just return the children\n  if (!propsContext.bubbleProps?.actions) return props.children;\n\n  // If actions are defined, but ios version is not supported, return the actionsheet\n  if (!contextMenuView) {\n    return (\n      <TouchableOpacity onLongPress={onLongPress}>\n        {props.children}\n      </TouchableOpacity>\n    );\n  }\n\n  if (Platform.OS === 'ios' && Platform.Version >= 13) {\n    return (\n      <contextMenuView.default\n        actions={propsContext.bubbleProps?.actions?.options}\n        onPress={(e: any) => onPress(e.nativeEvent.index)}\n      >\n        {props.children}\n      </contextMenuView.default>\n    );\n  }\n  return (\n    <contextMenuView.default\n      actions={propsContext.bubbleProps?.actions?.options}\n      onPress={(e: any) => onPress(e.nativeEvent.index)}\n    >\n      {props.children}\n    </contextMenuView.default>\n  );\n}\n\nexport { ContextMenuWrapper };\n"]}