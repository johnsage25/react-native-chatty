{"version":3,"sources":["UrlPreviewBubble.tsx"],"names":["React","useCallback","Image","Linking","StyleSheet","Text","TouchableOpacity","View","UrlPreviewBubble","props","url","title","description","image","onPressLink","canOpen","canOpenURL","openURL","styles","container","uri","previewImage","subContainer","slice","create","flexDirection","backgroundColor","borderRadius","padding","maxHeight","overflow","marginLeft","width","height","fontSize","fontWeight","color","marginTop"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SACEC,KADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,gBALF,EAMEC,IANF,QAOO,cAPP;AAUA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAA8B;AAC5D,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,WAAd;AAA2BC,IAAAA;AAA3B,MAAqCJ,KAA3C;AAEA,QAAMK,WAAW,GAAGb,WAAW,CAAC,YAAY;AAC1C,UAAMc,OAAO,GAAG,MAAMZ,OAAO,CAACa,UAAR,CAAmBN,GAAnB,CAAtB;;AAEA,QAAIK,OAAJ,EAAa;AACXZ,MAAAA,OAAO,CAACc,OAAR,CAAgBP,GAAhB;AACD;AACF,GAN8B,EAM5B,CAACA,GAAD,CAN4B,CAA/B;AAQA,sBACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEI;AAA3B,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC;AAApB,kBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEP;AAAP,KAAf;AAA+B,IAAA,KAAK,EAAEK,MAAM,CAACG;AAA7C,IADF,eAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACP;AAApB,KAA4BA,KAA5B,CADF,eAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACN;AAApB,KAAkCA,WAAW,CAACW,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CAAlC,QAFF,eAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACR;AAApB,KAA0BA,GAA1B,CAHF,CAHF,CADF,CADF;AAaD,CAxBM;AA0BP,MAAMQ,MAAM,GAAGd,UAAU,CAACoB,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,YAAY,EAAE,EAHL;AAITC,IAAAA,OAAO,EAAE,EAJA;AAKTC,IAAAA,SAAS,EAAE,GALF;AAMTC,IAAAA,QAAQ,EAAE;AAND,GADoB;AAS/BR,EAAAA,YAAY,EAAE;AACZS,IAAAA,UAAU,EAAE;AADA,GATiB;AAY/BV,EAAAA,YAAY,EAAE;AACZW,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,MAAM,EAAE,EAFI;AAGZN,IAAAA,YAAY,EAAE;AAHF,GAZiB;AAiB/BhB,EAAAA,KAAK,EAAE;AACLuB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GAjBwB;AAqB/BvB,EAAAA,WAAW,EAAE;AACXsB,IAAAA,QAAQ,EAAE,EADC;AAEXE,IAAAA,KAAK,EAAE;AAFI,GArBkB;AAyB/B1B,EAAAA,GAAG,EAAE;AACH2B,IAAAA,SAAS,EAAE,EADR;AAEHD,IAAAA,KAAK,EAAE;AAFJ;AAzB0B,CAAlB,CAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport {\n  Image,\n  Linking,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport type { IUrlPreviewBubble } from 'src/types/Chatty.types';\n\nexport const UrlPreviewBubble = (props: IUrlPreviewBubble) => {\n  const { url, title, description, image } = props;\n\n  const onPressLink = useCallback(async () => {\n    const canOpen = await Linking.canOpenURL(url);\n\n    if (canOpen) {\n      Linking.openURL(url);\n    }\n  }, [url]);\n\n  return (\n    <TouchableOpacity onPress={onPressLink}>\n      <View style={styles.container}>\n        <Image source={{ uri: image }} style={styles.previewImage} />\n\n        <View style={styles.subContainer}>\n          <Text style={styles.title}>{title}</Text>\n          <Text style={styles.description}>{description.slice(0, 50)}...</Text>\n          <Text style={styles.url}>{url}</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    backgroundColor: '#f5f5f5',\n    borderRadius: 10,\n    padding: 10,\n    maxHeight: 100,\n    overflow: 'hidden',\n  },\n  subContainer: {\n    marginLeft: 10,\n  },\n  previewImage: {\n    width: 30,\n    height: 30,\n    borderRadius: 10,\n  },\n  title: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  description: {\n    fontSize: 12,\n    color: '#888',\n  },\n  url: {\n    marginTop: 40,\n    color: '#3C91E6',\n  },\n});\n"]}