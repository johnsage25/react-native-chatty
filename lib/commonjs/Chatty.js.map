{"version":3,"sources":["Chatty.tsx"],"names":["PropsContext","React","createContext","Chatty","forwardRef","props","ref","listRef","messages","listener","Keyboard","addListener","current","scrollToEnd","console","warn","remove","setDateLocale","dayjs","locale","renderLoading","styles","loadingContainer","renderHeader","headerProps","Platform","select","android","ios","length","renderBubble","undefined","listProps","renderFooter","footerProps","replyingTo","StyleSheet","create","height","justifyContent","alignContent","alignItems"],"mappings":"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","sourcesContent":["import dayjs from 'dayjs';\nimport type { ForwardedRef } from 'react';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport {\n  ActivityIndicator,\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\nimport { List } from './List';\nimport type { IChatty, ListRef } from './types/Chatty.types';\n\nexport const PropsContext = React.createContext<IChatty>({} as IChatty);\n\nexport const Chatty = React.forwardRef(\n  (props: IChatty, ref: ForwardedRef<ListRef>) => {\n    const listRef = useRef<ListRef>();\n    const { messages } = props;\n\n    /* This is a way to scroll to the end of the list when the keyboard is shown. */\n    useEffect(() => {\n      const listener = Keyboard.addListener('keyboardDidShow', () => {\n        if (listRef.current) {\n          listRef.current?.scrollToEnd(true);\n        } else if (ref) {\n          //@ts-ignore\n          ref.current?.scrollToEnd(true);\n        } else {\n          console.warn('No ref found');\n        }\n      });\n\n      return () => {\n        listener.remove();\n      };\n    }, [ref]);\n\n    useEffect(() => {\n      if (props?.setDateLocale) {\n        dayjs.locale(props.setDateLocale);\n      }\n    }, [props.setDateLocale]);\n\n    const renderLoading = useCallback(() => {\n      return (\n        <View style={[styles.loadingContainer]}>\n          <ActivityIndicator />\n        </View>\n      );\n    }, []);\n\n    return (\n      <SafeAreaView>\n        <PropsContext.Provider value={props}>\n          {props?.renderHeader ? (\n            props.renderHeader(props.headerProps)\n          ) : (\n            <Header {...props.headerProps} />\n          )}\n          <KeyboardAvoidingView\n            behavior={Platform.select({\n              android: 'position',\n              ios: 'position',\n            })}\n            keyboardVerticalOffset={Platform.select({\n              android: 20,\n            })}\n          >\n            {props.messages.length < 1 ? (\n              renderLoading()\n            ) : (\n              <>\n                <List\n                  data={messages}\n                  //@ts-ignore\n                  ref={ref ?? listRef}\n                  rowRenderer={\n                    props?.renderBubble ? props.renderBubble : undefined\n                  }\n                  {...props.listProps}\n                />\n                {props?.renderFooter ? (\n                  props.renderFooter(props.footerProps)\n                ) : (\n                  <Footer\n                    {...props.footerProps}\n                    replyingTo={props.replyingTo}\n                  />\n                )}\n              </>\n            )}\n          </KeyboardAvoidingView>\n        </PropsContext.Provider>\n      </SafeAreaView>\n    );\n  }\n);\n\nexport const styles = StyleSheet.create({\n  loadingContainer: {\n    height: '90%',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n  },\n});\n"]}