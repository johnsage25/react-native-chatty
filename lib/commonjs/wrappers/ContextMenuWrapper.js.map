{"version":3,"sources":["ContextMenuWrapper.tsx"],"names":["ContextMenuWrapper","props","propsContext","PropsContext","onPress","index","ChatEmitter","emit","message","onLongPress","Platform","OS","ActionSheetIOS","showActionSheetWithOptions","options","bubbleProps","actions","map","_","title","cancelButtonLabel","cancelButtonIndex","length","destructiveButtonIndex","findIndex","destructive","children","contextMenuView","Version","e","nativeEvent"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;;;;;AAOA,SAASA,kBAAT,CAA4BC,KAA5B,EAA2C;AAAA;;AACzC,QAAMC,YAAY,GAAG,uBAAWC,oBAAX,CAArB;AAEA,QAAMC,OAAO,GAAG,wBACbC,KAAD,IAAW;AACTC,8BAAYC,IAAZ,CAAiB,eAAjB,EAAkCF,KAAlC,EAAyCJ,KAAK,CAACO,OAA/C;AACD,GAHa,EAId,CAACP,KAAK,CAACO,OAAP,CAJc,CAAhB;AAOA,QAAMC,WAAW,GAAG,wBAAY,MAAM;AACpC,QAAIC,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AAAA;;AACzBC,kCAAeC,0BAAf,CACE;AACEC,QAAAA,OAAO,EAAE,CACP,6BAAIZ,YAAY,CAACa,WAAjB,oFAAI,sBAA0BC,OAA9B,2DAAI,uBAAmCF,OAAnC,CAA2CG,GAA3C,CACDC,CAAD,IAAOA,CAAC,CAACC,KADP,CAAJ,CADO,sDAIPjB,YAAY,CAACa,WAJN,qFAIP,uBAA0BC,OAJnB,2DAIP,uBAAmCI,iBAJ5B,2EAIiD,OAJjD,CADX;AAOEC,QAAAA,iBAAiB,4BAAEnB,YAAY,CAACa,WAAf,qFAAE,uBAA0BC,OAA5B,2DAAE,uBAAmCF,OAAnC,CAA2CQ,MAPhE;AAQEC,QAAAA,sBAAsB,EACpB,2BAAArB,YAAY,CAACa,WAAb,4GAA0BC,OAA1B,kFAAmCF,OAAnC,CAA2CU,SAA3C,CACGN,CAAD,IAAOA,CAAC,CAACO,WADX,MAEK,CAAC;AAXV,OADF,EAcErB,OAdF;AAgBD;AACF,GAnBmB,EAmBjB,CACDA,OADC,6BAEDF,YAAY,CAACa,WAFZ,uFAED,wBAA0BC,OAFzB,4DAED,wBAAmCI,iBAFlC,6BAGDlB,YAAY,CAACa,WAHZ,uFAGD,wBAA0BC,OAHzB,4DAGD,wBAAmCF,OAHlC,CAnBiB,CAApB,CAVyC,CAmCzC;;AACA,MAAI,6BAACZ,YAAY,CAACa,WAAd,oDAAC,wBAA0BC,OAA3B,CAAJ,EAAwC,OAAOf,KAAK,CAACyB,QAAb,CApCC,CAsCzC;;AACA,MAAI,CAACC,4BAAL,EAAsB;AACpB,wBACE,6BAAC,6BAAD;AAAkB,MAAA,WAAW,EAAElB;AAA/B,OACGR,KAAK,CAACyB,QADT,CADF;AAKD;;AAED,MAAIhB,sBAASC,EAAT,KAAgB,KAAhB,IAAyBD,sBAASkB,OAAT,IAAoB,EAAjD,EAAqD;AAAA;;AACnD,wBACE,6BAAC,4BAAD,CAAiB,OAAjB;AACE,MAAA,OAAO,6BAAE1B,YAAY,CAACa,WAAf,uFAAE,wBAA0BC,OAA5B,4DAAE,wBAAmCF,OAD9C;AAEE,MAAA,OAAO,EAAGe,CAAD,IAAYzB,OAAO,CAACyB,CAAC,CAACC,WAAF,CAAczB,KAAf;AAF9B,OAIGJ,KAAK,CAACyB,QAJT,CADF;AAQD;;AACD,sBACE,6BAAC,4BAAD,CAAiB,OAAjB;AACE,IAAA,OAAO,6BAAExB,YAAY,CAACa,WAAf,uFAAE,wBAA0BC,OAA5B,4DAAE,wBAAmCF,OAD9C;AAEE,IAAA,OAAO,EAAGe,CAAD,IAAYzB,OAAO,CAACyB,CAAC,CAACC,WAAF,CAAczB,KAAf;AAF9B,KAIGJ,KAAK,CAACyB,QAJT,CADF;AAQD","sourcesContent":["import React, { useContext } from 'react';\nimport { useCallback } from 'react';\nimport { ActionSheetIOS, Platform, TouchableOpacity } from 'react-native';\nimport type { IMessage } from '../types/Chatty.types';\nimport { PropsContext } from '../Chatty';\nimport { contextMenuView } from '../utils/contextMenu';\nimport { ChatEmitter } from '../utils/eventEmitter';\n\ninterface IProps {\n  message: IMessage;\n  children: JSX.Element;\n}\n\nfunction ContextMenuWrapper(props: IProps) {\n  const propsContext = useContext(PropsContext);\n\n  const onPress = useCallback(\n    (index) => {\n      ChatEmitter.emit('actionPressed', index, props.message);\n    },\n    [props.message]\n  );\n\n  const onLongPress = useCallback(() => {\n    if (Platform.OS === 'ios') {\n      ActionSheetIOS.showActionSheetWithOptions(\n        {\n          options: [\n            ...(propsContext.bubbleProps?.actions?.options.map(\n              (_) => _.title\n            ) as string[]),\n            propsContext.bubbleProps?.actions?.cancelButtonLabel ?? 'Close',\n          ],\n          cancelButtonIndex: propsContext.bubbleProps?.actions?.options.length,\n          destructiveButtonIndex:\n            propsContext.bubbleProps?.actions?.options.findIndex(\n              (_) => _.destructive\n            ) || -1,\n        },\n        onPress\n      );\n    }\n  }, [\n    onPress,\n    propsContext.bubbleProps?.actions?.cancelButtonLabel,\n    propsContext.bubbleProps?.actions?.options,\n  ]);\n\n  // If actions are not defined, just return the children\n  if (!propsContext.bubbleProps?.actions) return props.children;\n\n  // If actions are defined, but ios version is not supported, return the actionsheet\n  if (!contextMenuView) {\n    return (\n      <TouchableOpacity onLongPress={onLongPress}>\n        {props.children}\n      </TouchableOpacity>\n    );\n  }\n\n  if (Platform.OS === 'ios' && Platform.Version >= 13) {\n    return (\n      <contextMenuView.default\n        actions={propsContext.bubbleProps?.actions?.options}\n        onPress={(e: any) => onPress(e.nativeEvent.index)}\n      >\n        {props.children}\n      </contextMenuView.default>\n    );\n  }\n  return (\n    <contextMenuView.default\n      actions={propsContext.bubbleProps?.actions?.options}\n      onPress={(e: any) => onPress(e.nativeEvent.index)}\n    >\n      {props.children}\n    </contextMenuView.default>\n  );\n}\n\nexport { ContextMenuWrapper };\n"]}