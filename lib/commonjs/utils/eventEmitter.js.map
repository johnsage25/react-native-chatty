{"version":3,"sources":["eventEmitter.ts"],"names":["ChatEmitter","EventEmitter","ChatBubbleEmitter"],"mappings":";;;;;;;AAAA;;AAiBA,MAAMA,WAAW,GAAG,IAAIC,0BAAJ,EAApB;;AACA,MAAMC,iBAAiB,GAAG,IAAID,0BAAJ,EAA1B","sourcesContent":["import { EventEmitter } from 'eventemitter3';\nimport type { IMessage } from '../types/Chatty.types';\nimport type TypedEmitter from 'typed-emitter';\n\nexport type EventMap = {\n  [key: string]: (...args: any[]) => void;\n};\n\ntype ChatEvents = {\n  patternPressed: (pattern: string, index: number, message: IMessage) => void;\n  actionPressed: (index: number, message: IMessage) => void;\n};\n\ntype ChatBubbleEvents = {\n  replyBubblePressed: (messageId: number) => void;\n};\n\nconst ChatEmitter = new EventEmitter() as TypedEmitter<ChatEvents>;\nconst ChatBubbleEmitter = new EventEmitter() as TypedEmitter<ChatBubbleEvents>;\n\nexport { ChatEmitter, ChatBubbleEmitter };\n"]}