{"version":3,"sources":["List.tsx"],"names":["ScrollViewWithHeader","React","forwardRef","ref","children","props","propsContext","PropsContext","loadEarlierProps","show","List","recyclerlistviewRef","windowDimensions","safeArea","trigger","fabRef","typingStatusRef","listHeight","height","bottom","top","rowRenderer","rowRendererProp","data","dataProvider","DataProvider","r1","r2","id","messages","setMessages","previousMessages","cloneWithRows","ChatBubbleEmitter","addListener","messageId","index","getAllData","findIndex","m","current","scrollToIndex","removeAllListeners","appendMessage","message","firstIndex","Array","isArray","me","enableHapticFeedback","Platform","OS","hapticEngine","HapticType","Heavy","scrollToEnd","animated","setIsTyping","typing","removeMessage","filter","then","layoutProvider","LayoutProvider","currentMessage","prevMessage","text","length","LayoutType","ExtremeLong","Long3x","Long2x","Long","media","Media2x","Media","repliedTo","Replied","isFirstMessage","createdAt","date","Dated","Normal","type","dim","width","renderBubble","withDate","renderDateProps","FadeInDown","FadeOutUp","onReply","onScroll","e","offsetX","offsetY","nativeEvent","contentOffset","y","hide","scrollToBottom","minWidth","minHeight","maxHeight","showScrollToBottomButton","scrollToBottomProps","replyingTo","containerStyle","keyboardShouldPersistTaps","onEndReached","onEndReachedThreshold"],"mappings":"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","sourcesContent":["import dayjs from 'dayjs';\nimport type { ForwardedRef, Ref } from 'react';\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Platform, ScrollView, useWindowDimensions, View } from 'react-native';\nimport Animated, { FadeInDown, FadeOutUp } from 'react-native-reanimated';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  DataProvider,\n  LayoutProvider,\n  RecyclerListView,\n} from 'recyclerlistview';\nimport type { ScrollEvent } from 'recyclerlistview/dist/reactnative/core/scrollcomponent/BaseScrollView';\nimport { ChatBubble } from './ChatBubble';\nimport { PropsContext } from './Chatty';\nimport { FAB, IFabRef } from './components/FAB';\nimport { LoadEarlier } from './components/LoadEarlier';\nimport { RenderDate } from './components/RenderDate';\nimport { TypingStatus } from './components/TypingStatus';\nimport { useHaptic } from './hooks/useHaptic';\nimport { usePrevious } from './hooks/usePrevious';\nimport { SwipeableBubble } from './SwipeableBubble';\nimport {\n  HapticType,\n  IListProps,\n  IMessage,\n  ITypingStatusRef,\n  LayoutType,\n  ListRef,\n} from './types/Chatty.types';\nimport { ChatBubbleEmitter } from './utils/eventEmitter';\nimport { hapticEngine } from './utils/hapticEngine';\nimport { wait } from './utils/helpers';\n\nconst ScrollViewWithHeader = React.forwardRef(\n  ({ children, ...props }, ref: Ref<ScrollView>) => {\n    const propsContext = useContext(PropsContext);\n\n    return (\n      <ScrollView ref={ref} {...props}>\n        {propsContext?.loadEarlierProps &&\n          propsContext.loadEarlierProps.show && (\n            <LoadEarlier {...propsContext.loadEarlierProps} />\n          )}\n        {children}\n      </ScrollView>\n    );\n  }\n);\n\nexport const List = React.forwardRef(\n  (props: IListProps, ref: ForwardedRef<ListRef>) => {\n    const propsContext = useContext(PropsContext);\n    const recyclerlistviewRef = useRef<RecyclerListView<any, any>>();\n    const windowDimensions = useWindowDimensions();\n    const safeArea = useSafeAreaInsets();\n    const { trigger } = useHaptic();\n    const fabRef = useRef<IFabRef>(null);\n    const typingStatusRef = useRef<ITypingStatusRef>(null);\n    const listHeight = useMemo(\n      () => windowDimensions.height - 150 - safeArea.bottom - safeArea.top,\n      [windowDimensions, safeArea]\n    );\n    const { rowRenderer: rowRendererProp, data } = props;\n\n    const dataProvider = useMemo<DataProvider>(() => {\n      return new DataProvider((r1: IMessage, r2: IMessage) => {\n        if (r1.id !== r2.id) {\n          return true;\n        }\n\n        return false;\n      });\n    }, []);\n\n    const [messages, setMessages] = useState<DataProvider>(dataProvider);\n    const previousMessages = usePrevious<DataProvider>(messages);\n\n    /* This is a React Hook that is used to update the messages list when new messages are added. */\n    useEffect(() => {\n      setMessages(dataProvider.cloneWithRows(data));\n    }, [data, dataProvider]);\n\n    /* This code is listening to the event of a reply bubble being pressed. When it is pressed, it scrolls\nto the replied message. */\n    useEffect(() => {\n      // When reply is pressed, scroll to replied message\n      ChatBubbleEmitter.addListener('replyBubblePressed', (messageId) => {\n        const index = messages\n          .getAllData()\n          .findIndex((m) => m.id === messageId);\n\n        if (index !== -1) {\n          recyclerlistviewRef.current?.scrollToIndex(index, true);\n        }\n      });\n\n      return () => {\n        ChatBubbleEmitter.removeAllListeners();\n      };\n    }, [messages]);\n\n    /* Using the useImperativeHandle hook to expose a function to the parent component that will allow\n    it to manipulate the messages list. */\n    useImperativeHandle(\n      ref,\n      () => ({\n        appendMessage: (\n          message: IMessage | IMessage[],\n          firstIndex?: boolean\n        ) => {\n          if (firstIndex) {\n            if (Array.isArray(message)) {\n              setMessages(\n                dataProvider.cloneWithRows([\n                  ...message,\n                  ...messages.getAllData(),\n                ])\n              );\n            } else {\n              setMessages(\n                dataProvider.cloneWithRows([message, ...messages.getAllData()])\n              );\n            }\n          } else {\n            if (Array.isArray(message)) {\n              setMessages(\n                dataProvider.cloneWithRows([\n                  ...messages.getAllData(),\n                  ...message,\n                ])\n              );\n            } else {\n              setMessages(\n                dataProvider.cloneWithRows([...messages.getAllData(), message])\n              );\n            }\n          }\n\n          if (!Array.isArray(message)) {\n            if (!message.me && propsContext?.enableHapticFeedback) {\n              if (Platform.OS !== 'web' && hapticEngine)\n                trigger(HapticType.Heavy);\n            }\n          }\n        },\n        /* This is a function that is used to scroll to the bottom of the list. */\n        scrollToEnd: (animated?: boolean) => {\n          recyclerlistviewRef.current?.scrollToEnd(animated);\n        },\n        /* Setting the typing status of the user. */\n        setIsTyping: (typing?: boolean) => {\n          typingStatusRef.current?.setIsTyping(typing ?? false);\n          recyclerlistviewRef.current?.scrollToEnd(true);\n        },\n        /* Removing a message from the list of messages. */\n        removeMessage: (id: number) => {\n          setMessages(\n            dataProvider.cloneWithRows(\n              messages.getAllData().filter((message) => message.id !== id)\n            )\n          );\n        },\n      }),\n      [dataProvider, messages, propsContext.enableHapticFeedback, trigger]\n    );\n\n    /* This code is checking if the first message in the previous messages is the same as the first message\nin the current messages. If it is, then it will not scroll to the bottom. */\n    useEffect(() => {\n      if (\n        previousMessages &&\n        previousMessages.getAllData()![0]?.id === messages.getAllData()![0]?.id\n      ) {\n        wait(100).then(() => {\n          recyclerlistviewRef.current?.scrollToEnd(true);\n        });\n      }\n    }, [ref, messages, previousMessages]);\n\n    const layoutProvider = useCallback(() => {\n      return new LayoutProvider(\n        (index) => {\n          const currentMessage: IMessage = messages.getAllData()[index];\n          const prevMessage: IMessage = messages.getAllData()[index - 1];\n\n          if (currentMessage.text.length >= 600) {\n            return LayoutType.ExtremeLong;\n          }\n\n          if (currentMessage.text.length >= 400) {\n            return LayoutType.Long3x;\n          }\n\n          if (currentMessage.text.length >= 200) {\n            return LayoutType.Long2x;\n          }\n\n          if (currentMessage.text.length >= 100) {\n            return LayoutType.Long;\n          }\n\n          if (currentMessage?.media) {\n            if (currentMessage.media.length > 2) {\n              return LayoutType.Media2x;\n            }\n\n            return LayoutType.Media;\n          }\n\n          if (currentMessage.repliedTo) {\n            return LayoutType.Replied;\n          }\n\n          const isFirstMessage = index === 0;\n\n          if (\n            (!isFirstMessage &&\n              dayjs(currentMessage.createdAt).date() !==\n                dayjs(prevMessage.createdAt).date()) ||\n            isFirstMessage\n          ) {\n            return LayoutType.Dated;\n          }\n\n          return LayoutType.Normal;\n        },\n        (type, dim) => {\n          dim.width = windowDimensions.width;\n\n          switch (type) {\n            case LayoutType.Normal:\n              dim.height = 85;\n              break;\n            case LayoutType.Replied:\n              dim.height = 190;\n              break;\n            case LayoutType.Dated:\n              dim.height = 110;\n              break;\n            case LayoutType.Long:\n              dim.height = 130;\n              break;\n            case LayoutType.Long2x:\n              dim.height = 170;\n              break;\n            case LayoutType.Long3x:\n              dim.height = 350;\n              break;\n            case LayoutType.ExtremeLong:\n              dim.height = 550;\n              break;\n            case LayoutType.Media:\n              dim.height = 180;\n              break;\n            case LayoutType.Media2x:\n              dim.height = 300;\n              break;\n\n            default:\n              dim.height = 85;\n              break;\n          }\n        }\n      );\n    }, [messages, windowDimensions.width]);\n\n    const renderBubble = useCallback(\n      (data: IMessage, withDate?: boolean) => {\n        if (rowRendererProp) {\n          return (\n            <View>\n              {withDate && (\n                <RenderDate\n                  date={data.createdAt}\n                  {...propsContext.renderDateProps}\n                />\n              )}\n\n              <Animated.View entering={FadeInDown} exiting={FadeOutUp}>\n                <SwipeableBubble message={data} onReply={propsContext.onReply}>\n                  {rowRendererProp(data)}\n                </SwipeableBubble>\n              </Animated.View>\n            </View>\n          );\n        }\n\n        return (\n          <View style={{ width: '100%' }}>\n            {withDate && (\n              <RenderDate\n                date={data.createdAt}\n                {...propsContext.renderDateProps}\n              />\n            )}\n            <Animated.View entering={FadeInDown} exiting={FadeOutUp}>\n              {propsContext.onReply ? (\n                <>\n                  <SwipeableBubble\n                    message={data}\n                    onReply={propsContext.onReply}\n                  />\n                </>\n              ) : (\n                <ChatBubble message={data} />\n              )}\n            </Animated.View>\n          </View>\n        );\n      },\n      [propsContext.onReply, propsContext.renderDateProps, rowRendererProp]\n    );\n\n    const rowRenderer = useCallback(\n      (type, data: IMessage) => {\n        if (type === LayoutType.Dated) {\n          return renderBubble(data, true);\n        }\n\n        return renderBubble(data);\n      },\n      [renderBubble]\n    );\n\n    const onScroll = useCallback(\n      (e: ScrollEvent, offsetX: number, offsetY: number) => {\n        if (e.nativeEvent.contentOffset.y <= 0) {\n          fabRef.current?.show();\n        } else {\n          fabRef.current?.hide();\n        }\n\n        if (props.onScroll) {\n          props.onScroll(e, offsetX, offsetY);\n        }\n      },\n      [props]\n    );\n\n    const scrollToBottom = useCallback(() => {\n      recyclerlistviewRef.current?.scrollToEnd(true);\n    }, []);\n\n    return (\n      <View style={{ minWidth: 1, minHeight: 1, maxHeight: listHeight }}>\n        {propsContext.showScrollToBottomButton && (\n          <FAB\n            ref={fabRef}\n            onPress={scrollToBottom}\n            {...propsContext.scrollToBottomProps}\n          />\n        )}\n\n        <RecyclerListView\n          layoutProvider={layoutProvider()}\n          externalScrollView={ScrollViewWithHeader}\n          dataProvider={messages}\n          style={[\n            {\n              height: propsContext.replyingTo ? '90%' : '100%',\n            },\n            props.containerStyle,\n          ]}\n          // @ts-ignore\n          ref={recyclerlistviewRef}\n          scrollViewProps={{\n            keyboardShouldPersistTaps: 'never',\n          }}\n          onScroll={onScroll}\n          optimizeForInsertDeleteAnimations\n          forceNonDeterministicRendering\n          canChangeSize={true}\n          rowRenderer={rowRenderer}\n          renderFooter={() => <TypingStatus ref={typingStatusRef} />}\n          onEndReached={props?.onEndReached}\n          onEndReachedThreshold={props?.onEndReachedThreshold}\n        />\n      </View>\n    );\n  }\n);\n"]}