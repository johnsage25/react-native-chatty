{"version":3,"sources":["Footer.tsx"],"names":["_Footer","props","propsContext","PropsContext","message","setMessage","mentions","foundedMentions","setFoundedMentions","image","setImage","cuttedText","replyingTo","text","slice","onChangeText","split","forEach","word","push","filter","mention","console","log","indexOf","toLowerCase","replace","onPressSend","repliedTo","media","onPressMention","target","prev","messagesArray","lastMessageIndex","length","lastMessage","renderMenu","splittedWords","startsWith","FadeInDown","FadeOutDown","mentionStyles","containerStyle","styles","mentionContainer","map","labelStyle","mentionLabel","onKeyPress","key","onPressImage","then","r","assets","type","MediaType","Image","uri","base64","position","bottom","backgroundColor","reply","replyStyles","replyBody","replyUsername","usernameStyle","user","username","footerProps","closeReplyButton","onPressCancelReply","container","_image","v","mediaOverlay","marginBottom","borderRadius","imageClearButton","color","textAlign","addMore","fontSize","flexDirection","alignItems","value","enableImageUploads","shortedTextInput","textInput","inputStyle","placeholder","e","nativeEvent","renderImageAction","paddingHorizontal","sendButton","StyleSheet","create","padding","width","borderWidth","borderColor","button","borderLeftColor","borderLeftWidth","flex","fontWeight","height","borderStyle","justifyContent","marginLeft","marginTop","alignContent","marginRight","Footer","React","memo"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useMemo, useState } from 'react';\nimport {\n  Button,\n  ImageBackground,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n} from 'react-native';\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport Animated, { FadeInDown, FadeOutDown } from 'react-native-reanimated';\nimport { PropsContext } from './Chatty';\nimport { IFooterProps, IMedia, MediaType } from './types/Chatty.types';\nimport { selectImage } from './utils/imagePicker';\n\nfunction _Footer(props: IFooterProps) {\n  const propsContext = useContext(PropsContext);\n  const [message, setMessage] = useState<string>('');\n  const [mentions] = useState(['JohnDoe']);\n  const [foundedMentions, setFoundedMentions] = useState<string[]>([]);\n  const [image, setImage] = useState<IMedia[] | undefined>();\n\n  const cuttedText = useMemo(() => {\n    if (props.replyingTo) {\n      return props.replyingTo.text.slice(0, 100) + '...';\n    }\n\n    return null;\n  }, [props?.replyingTo]);\n\n  const onChangeText = useCallback(\n    (text: string) => {\n      const foundedMentions: string[] = [];\n\n      // Iterate over all text\n      text.split(' ').forEach((word) => {\n        foundedMentions.push(\n          // Check and push if word exists in mentions\n          ...mentions.filter((mention) => {\n            console.log(text, mention.indexOf(word));\n            return (\n              mention\n                .toLowerCase()\n                .indexOf(word.toLowerCase().replace('@', '')) != -1\n            );\n          })\n        );\n      });\n\n      setFoundedMentions(foundedMentions);\n\n      props.onChangeText(text);\n      setMessage(text);\n    },\n    [props, mentions]\n  );\n\n  const onPressSend = useCallback(() => {\n    props.onPressSend({\n      text: message,\n      repliedTo: props.replyingTo,\n      media: image,\n    });\n    setMessage('');\n    setImage([]);\n  }, [message, props, image]);\n\n  const onPressMention = (target: string) => {\n    setMessage((prev) => {\n      const messagesArray = prev.split(' ');\n      const lastMessageIndex = messagesArray.length - 1;\n      const lastMessage = messagesArray[lastMessageIndex];\n\n      prev = prev.replace(lastMessage, '@' + target);\n\n      return prev;\n    });\n\n    setFoundedMentions([]);\n  };\n\n  const renderMenu = useCallback(() => {\n    if (message && foundedMentions.length > 0) {\n      const splittedWords = message.split(' ');\n\n      if (splittedWords[splittedWords.length - 1].startsWith('@')) {\n        return (\n          <Animated.View\n            entering={FadeInDown}\n            exiting={FadeOutDown}\n            style={\n              props.mentionStyles?.containerStyle ?? styles.mentionContainer\n            }\n          >\n            {foundedMentions.map((mention) => (\n              <TouchableOpacity onPress={() => onPressMention(mention)}>\n                <Text\n                  style={props.mentionStyles?.labelStyle ?? styles.mentionLabel}\n                >\n                  @{mention}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </Animated.View>\n        );\n      }\n    }\n\n    return null;\n  }, [\n    foundedMentions,\n    message,\n    props.mentionStyles?.containerStyle,\n    props.mentionStyles?.labelStyle,\n  ]);\n\n  const onKeyPress = useCallback((key: string) => {\n    if (key === ' ') {\n      setFoundedMentions([]);\n    }\n  }, []);\n\n  const onPressImage = useCallback(async () => {\n    selectImage().then((r) => {\n      const assets = {\n        type: MediaType.Image,\n        uri: r?.assets ? r.assets[0].uri : r.uri,\n        base64: r?.assets ? r.assets[0].base64 : r.base64,\n      };\n      if (image) {\n        setImage([...image, assets]);\n      } else {\n        setImage([assets]);\n      }\n    });\n  }, [image]);\n\n  return (\n    <View\n      style={\n        image &&\n        image.length > 0 && {\n          position: 'absolute',\n          bottom: -70,\n          backgroundColor: '#fff',\n        }\n      }\n    >\n      {props.replyingTo && (\n        <Animated.View\n          entering={FadeInDown}\n          exiting={FadeOutDown}\n          style={[styles.reply, props.replyStyles?.containerStyle]}\n        >\n          <View style={styles.replyBody}>\n            <Text\n              style={[styles.replyUsername, props.replyStyles?.usernameStyle]}\n            >\n              {props.replyingTo.user.username}\n            </Text>\n            <Text style={props.replyStyles?.labelStyle}>{cuttedText}</Text>\n          </View>\n          {propsContext.footerProps.closeReplyButton ? (\n            propsContext.footerProps.closeReplyButton(props)\n          ) : (\n            <Button title=\"cancel\" onPress={props.onPressCancelReply} />\n          )}\n        </Animated.View>\n      )}\n\n      {renderMenu()}\n\n      <View style={[styles.container, props.containerStyle]}>\n        {image && image.length > 0 && (\n          <ScrollView horizontal pagingEnabled>\n            {image.map((_image) => (\n              <TouchableOpacity\n                onPress={() =>\n                  setImage((prev) => prev && prev.filter((v) => v !== _image))\n                }\n                style={styles.media}\n              >\n                <ImageBackground\n                  style={[styles.mediaOverlay, { marginBottom: 15 }]}\n                  source={{ uri: _image.uri }}\n                  imageStyle={{\n                    borderRadius: 15,\n                  }}\n                >\n                  <View style={styles.media}>\n                    <View style={styles.imageClearButton}>\n                      <Text style={{ color: '#fff', textAlign: 'center' }}>\n                        x\n                      </Text>\n                    </View>\n                  </View>\n                </ImageBackground>\n              </TouchableOpacity>\n            ))}\n\n            <TouchableOpacity onPress={onPressImage}>\n              <View style={styles.addMore}>\n                <Text style={{ fontSize: 20, color: '#ccc' }}>+</Text>\n              </View>\n            </TouchableOpacity>\n          </ScrollView>\n        )}\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <TextInput\n            value={props.value ?? message}\n            onChangeText={onChangeText}\n            style={[\n              propsContext?.enableImageUploads\n                ? styles.shortedTextInput\n                : styles.textInput,\n\n              props?.inputStyle,\n            ]}\n            placeholder={props?.placeholder ?? 'Type a message...'}\n            onKeyPress={(e) => onKeyPress(e.nativeEvent.key)}\n          />\n\n          {propsContext?.enableImageUploads && (\n            <>\n              {props?.renderImageAction ? (\n                props.renderImageAction({\n                  onPressImage,\n                })\n              ) : (\n                <TouchableOpacity\n                  onPress={onPressImage}\n                  style={{ paddingHorizontal: 10 }}\n                >\n                  <Text style={{ fontSize: 20 }}>📷</Text>\n                </TouchableOpacity>\n              )}\n            </>\n          )}\n\n          {props?.sendButton ? (\n            props.sendButton({\n              onPressSend: onPressSend,\n            })\n          ) : (\n            <Button title=\"Send\" onPress={onPressSend} color=\"#0084ff\" />\n          )}\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n  textInput: {\n    padding: 10,\n    width: '80%',\n    borderWidth: 1,\n    borderColor: '#ccc',\n  },\n  shortedTextInput: {\n    padding: 10,\n    width: '70%',\n    borderWidth: 1,\n    borderColor: '#ccc',\n  },\n  button: {\n    width: '20%',\n    backgroundColor: '#fcba03',\n  },\n  reply: {\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: '#f5f5f5',\n    borderLeftColor: '#c8faaf',\n    borderLeftWidth: 6,\n  },\n  replyBody: {\n    flex: 1,\n  },\n  replyUsername: {\n    fontWeight: 'bold',\n  },\n\n  addMore: {\n    width: 100,\n    height: 100,\n    borderWidth: 1,\n    borderStyle: 'dashed',\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#ccc',\n  },\n  imageClearButton: {\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    width: 18,\n    height: 18,\n    marginLeft: 10,\n    marginTop: 5,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'center',\n  },\n  media: {\n    width: 110,\n    height: 100,\n    borderRadius: 15,\n    marginRight: 10,\n    marginBottom: 10,\n  },\n  mediaOverlay: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    borderRadius: 15,\n  },\n  mentionContainer: {\n    position: 'absolute',\n    bottom: 50,\n    width: '100%',\n    padding: 10,\n    backgroundColor: '#E5EEFA',\n  },\n  mentionLabel: {\n    padding: 10,\n    color: '#1939B7',\n  },\n});\n\nexport const Footer = React.memo(_Footer);\n"]}