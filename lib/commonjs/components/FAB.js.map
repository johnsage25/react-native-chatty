{"version":3,"sources":["FAB.tsx"],"names":["_FAB","_","ref","isVisible","setIsVisible","show","hide","containerStyle","styles","button","onPress","content","label","StyleSheet","create","width","zIndex","height","backgroundColor","padding","borderRadius","position","bottom","right","textAlign","fontSize","FAB","React","memo","forwardRef"],"mappings":";;;;;;;AACA;;AACA;;;;;;AAQA,SAASA,IAAT,CAAcC,CAAd,EAAuCC,GAAvC,EAA0D;AAAA;;AACxD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B,qBAAkB,KAAlB,CAAlC;AAEA,kCACEF,GADF,EAEE,OAAO;AACLG,IAAAA,IAAI,EAAE,MAAMD,YAAY,CAAC,IAAD,CADnB;AAELE,IAAAA,IAAI,EAAE,MAAMF,YAAY,CAAC,KAAD;AAFnB,GAAP,CAFF,EAME,EANF;AASA,MAAI,CAACD,SAAL,EAAgB,OAAO,IAAP;AAEhB,sBACE,6BAAC,6BAAD;AACE,IAAA,KAAK,sBAAEF,CAAC,CAACM,cAAJ,+DAAsBC,MAAM,CAACC,MADpC;AAEE,IAAA,OAAO,EAAER,CAAC,CAACS;AAFb,kBAIGT,CAAC,CAACU,OAJL,8DAIgB,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,YAJhB,CADF;AAQD;;AAED,MAAMJ,MAAM,GAAGK,wBAAWC,MAAX,CAAkB;AAC/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE,CAFF;AAGNC,IAAAA,MAAM,EAAE,EAHF;AAINC,IAAAA,eAAe,EAAE,WAJX;AAKNC,IAAAA,OAAO,EAAE,EALH;AAMNC,IAAAA,YAAY,EAAE,EANR;AAONC,IAAAA,QAAQ,EAAE,UAPJ;AAQNC,IAAAA,MAAM,EAAE,EARF;AASNC,IAAAA,KAAK,EAAE;AATD,GADuB;AAY/BX,EAAAA,KAAK,EAAE;AACLY,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,QAAQ,EAAE;AAFL;AAZwB,CAAlB,CAAf;;AAkBO,MAAMC,GAAG,gBAAGC,eAAMC,IAAN,eAAWD,eAAME,UAAN,CAAiB7B,IAAjB,CAAX,CAAZ","sourcesContent":["import type { Ref } from 'react';\nimport React, { useImperativeHandle, useState } from 'react';\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\nimport type { IScrollToBottomProps } from 'src/types/Chatty.types';\n\nexport interface IFabRef {\n  show: () => void;\n  hide: () => void;\n}\n\nfunction _FAB(_: IScrollToBottomProps, ref: Ref<IFabRef>) {\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      show: () => setIsVisible(true),\n      hide: () => setIsVisible(false),\n    }),\n    []\n  );\n\n  if (!isVisible) return null;\n\n  return (\n    <TouchableOpacity\n      style={_.containerStyle ?? styles.button}\n      onPress={_.onPress}\n    >\n      {_.content ?? <Text style={styles.label}>DOWN</Text>}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 50,\n    zIndex: 1,\n    height: 50,\n    backgroundColor: 'lightblue',\n    padding: 10,\n    borderRadius: 50,\n    position: 'absolute',\n    bottom: 50,\n    right: 20,\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 10,\n  },\n});\n\nexport const FAB = React.memo(React.forwardRef(_FAB));\n"]}